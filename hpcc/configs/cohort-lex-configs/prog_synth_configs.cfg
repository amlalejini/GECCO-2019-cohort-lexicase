### DEFAULT_GROUP ###
# General settings

set SEED 1                                          # Random number seed (-1 for based on time)
set GENERATIONS 1000                               # How many generations should we run for?
set PROG_POP_SIZE 512                               # Population size for programs
set TEST_POP_SIZE 512                               # Population size for tests - how many tests exist at once?
set EVALUATION_MODE 0                               # How are programs evaluated? 
                                                    # 0: cohorts 
                                                    # 1: full (on all tests) 
                                                    # 2: program only cohorts
set PROG_COHORT_SIZE 16                             # How big should random cohorts be (only relevant when evaluating with random cohort method)?
set TEST_COHORT_SIZE 16                             # How big should random cohorts be (only relevant when evaluating with random cohort method)?
set TRAINING_EXAMPLE_MODE 3                         # How do training examples change over time? 
                                                    # 0: co-evolution 
                                                    # 1: static 
                                                    # 2: random 
                                                    # 3: Static-gen 
                                                    # 4: STATIC_COEVO 
set PROBLEM number-io                               # Which problem to use?
set BENCHMARK_DATA_DIR ../data/prog-synth-examples  # Location to look for problem test case data.

### SELECTION_GROUP ###
# Settings specific to selection (both tests and programs).

set PROG_SELECTION_MODE 0           # How are selected? 
                                    # 0: LEXICASE 
                                    # 1: COHORT_LEXICASE 
                                    # 2: TOURNAMENT 
                                    # 3: DRIFT 
                                    # 4: PROG_ONLY_COHORT_LEXICASE
set TEST_SELECTION_MODE 0           # How are selected? 
                                    # 0: LEXICASE 
                                    # 1: COHORT_LEXICASE 
                                    # 2: TOURNAMENT 
                                    # 3: DRIFT
set PROG_LEXICASE_MAX_FUNS 0        # Max number of functions to use for program lexicase selection. (0 to use all)
set PROG_COHORTLEXICASE_MAX_FUNS 0  # Max number of functions to use for program cohort lexicase selection. (0 to use all)
set TEST_LEXICASE_MAX_FUNS 0        # Max number of functions to use for test lexicase selection. (0 to use all)
set TEST_COHORTLEXICASE_MAX_FUNS 0  # Max number of functions to use for test cohort lexicase selection. (0 to use all)
set PROG_TOURNAMENT_SIZE 4          # How big should tournaments be during program tournament selection?
set TEST_TOURNAMENT_SIZE 4          # How big should tournaments be during test tournament selection?

### PROGRAM_GROUP ###
# General settings specific to programs.

set MIN_PROG_SIZE 1                   # Minimum program size
set MAX_PROG_SIZE 32                  # Maximum program size
set PROG_EVAL_TIME 32                 # How many clock cycles should we give a program during a test?
set PROG_MUT__PER_BIT_FLIP 0.001000   # Program per-bit flip rate.
set PROG_MUT__PER_INST_SUB 0.005000   # Program per-instruction substitution mutation rate.
set PROG_MUT__PER_INST_INS 0.005000   # Program per-instruction insertion mutation rate.
set PROG_MUT__PER_INST_DEL 0.005000   # Program per-instruction deletion mutation rate.
set PROG_MUT__PER_PROG_SLIP 0.050000  # Program per-program slip mutation rate.
set PROG_MUT__PER_MOD_DUP 0.050000    # Program per-module whole-module duplication rate.
set PROG_MUT__PER_MOD_DEL 0.050000    # Program per-module whole-module deletion rate.

### HARDWARE_GROUP ###
# Settings specific to TagLGP virtual hardware

set MIN_TAG_SPECIFICITY 0.000000  # What is the minimum tag similarity required for a tag to successfully reference another tag?
set MAX_CALL_DEPTH 128            # Maximum depth of hardware's call stack.

### PROB_NUMBER_IO_GROUP ###
# Settings specific to NumberIO problem.

set PROB_NUMBER_IO__DOUBLE_MIN -100.000000              # Min value for input double.
set PROB_NUMBER_IO__DOUBLE_MAX 100.000000               # Max value for input double.
set PROB_NUMBER_IO__INT_MIN -100                        # Min value for input int.
set PROB_NUMBER_IO__INT_MAX 100                         # Max value for input int.
set PROB_NUMBER_IO__MUTATION__PER_INT_RATE 0.100000     # Per-integer mutation rate.
set PROB_NUMBER_IO__MUTATION__PER_DOUBLE_RATE 0.100000  # Per-double mutation rate.

### PROB_SMALL_OR_LARGE_GROUP ###
# Settings specific to the small or large problem.

set PROB_SMALL_OR_LARGE__INT_MIN -10000                   # Min value for input int.
set PROB_SMALL_OR_LARGE__INT_MAX 10000                    # Max value for input int.
set PROB_SMALL_OR_LARGE__MUTATION__PER_INT_RATE 0.100000  # Per-integer mutation rate.

### PROB_FOR_LOOP_INDEX_GROUP ###
# Settings specific to the for loop index problem.

set PROB_FOR_LOOP_INDEX__START_END_MIN -500           # . value for .
set PROB_FOR_LOOP_INDEX__START_END_MAX 500            # . value for .
set PROB_FOR_LOOP_INDEX__STEP_MIN 1                   # . value for .
set PROB_FOR_LOOP_INDEX__STEP_MAX 10                  # . value for .
set PROB_FOR_LOOP_INDEX__MUTATION__MUT_RATE 0.100000  # Per-integer mutation rate.

### PROB_COMPARE_STRING_LENGTHS_GROUP ###
# Settings specific to the compare string lengths problem.

set PROB_COMPARE_STRING_LENGTHS__MIN_STR_LEN 0               # .
set PROB_COMPARE_STRING_LENGTHS__MAX_STR_LEN 49              # .
set PROB_COMPARE_STRING_LENGTHS__PER_SITE_INS_RATE 0.100000  # .
set PROB_COMPARE_STRING_LENGTHS__PER_SITE_DEL_RATE 0.100000  # .
set PROB_COMPARE_STRING_LENGTHS__PER_SITE_SUB_RATE 0.100000  # .
set PROB_COMPARE_STRING_LENGTHS__PER_STR_SWAP_RATE 0.100000  # .

### PROB_COLLATZ_NUMBERS_GROUP ###
# Settings specific to the collatz numbers problem.

set PROB_COLLATZ_NUMBERS__MIN_NUM 1                            # .
set PROB_COLLATZ_NUMBERS__MAX_NUM 10000                        # .
set PROB_COLLATZ_NUMBERS__MUTATION__PER_NUM_SUB_RATE 0.100000  # .

### PROB_STRING_LENGTHS_BACKWARDS_GROUP ###
# Settings specific to the string lengths backwards problem

set PROB_STRING_LENGTHS_BACKWARDS__MIN_STR_LEN 0                         # .
set PROB_STRING_LENGTHS_BACKWARDS__MAX_STR_LEN 50                        # .
set PROB_STRING_LENGTHS_BACKWARDS__MIN_STR_CNT 0                         # .
set PROB_STRING_LENGTHS_BACKWARDS__MAX_STR_CNT 50                        # .
set PROB_STRING_LENGTHS_BACKWARDS__MUTATION__PER_CHAR_INS_RATE 0.050000  # .
set PROB_STRING_LENGTHS_BACKWARDS__MUTATION__PER_CHAR_DEL_RATE 0.050000  # .
set PROB_STRING_LENGTHS_BACKWARDS__MUTATION__PER_CHAR_SUB_RATE 0.050000  # .
set PROB_STRING_LENGTHS_BACKWARDS__MUTATION__PER_STR_SWAP_RATE 0.100000  # .
set PROB_STRING_LENGTHS_BACKWARDS__MUTATION__PER_STR_DUP_RATE 0.100000   # .
set PROB_STRING_LENGTHS_BACKWARDS__MUTATION__PER_STR_DEL_RATE 0.100000   # .

### PROG_LAST_INDEX_OF_ZERO_GROUP ###
# Settings specific to the last index of zero problem.

set PROB_LAST_INDEX_OF_ZERO__MIN_VEC_LEN 1                         # .
set PROB_LAST_INDEX_OF_ZERO__MAX_VEC_LEN 50                        # .
set PROB_LAST_INDEX_OF_ZERO__MIN_NUM -50                           # .
set PROB_LAST_INDEX_OF_ZERO__MAX_NUM 50                            # .
set PROB_LAST_INDEX_OF_ZERO__MUTATION__PER_NUM_SWAP_RATE 0.050000  # .
set PROB_LAST_INDEX_OF_ZERO__MUTATION__PER_NUM_DEL_RATE 0.050000   # .
set PROB_LAST_INDEX_OF_ZERO__MUTATION__PER_NUM_INS_RATE 0.050000   # .
set PROB_LAST_INDEX_OF_ZERO__MUTATION__PER_NUM_SUB_RATE 0.050000   # .

### PROB_COUNT_ODDS_GROUP ###
# Settings specific to the count odds problem.

set PROB_COUNT_ODDS__MIN_VEC_LEN 0                         # .
set PROB_COUNT_ODDS__MAX_VEC_LEN 50                        # .
set PROB_COUNT_ODDS__MIN_NUM -1000                         # .
set PROB_COUNT_ODDS__MAX_NUM 1000                          # .
set PROB_COUNT_ODDS__MUTATION__PER_NUM_SWAP_RATE 0.050000  # .
set PROB_COUNT_ODDS__MUTATION__PER_NUM_DEL_RATE 0.050000   # .
set PROB_COUNT_ODDS__MUTATION__PER_NUM_INS_RATE 0.050000   # .
set PROB_COUNT_ODDS__MUTATION__PER_NUM_SUB_RATE 0.050000   # .

### PROB_MIRROR_IMAGE_GROUP ###
# Settings specific to the mirror image problem.

set PROB_MIRROR_IMAGE__MIN_VEC_LEN 0                                  # .
set PROB_MIRROR_IMAGE__MAX_VEC_LEN 50                                 # .
set PROB_MIRROR_IMAGE__MIN_NUM -1000                                  # .
set PROB_MIRROR_IMAGE__MAX_NUM 1000                                   # .
set PROB_MIRROR_IMAGE__MUTATION__PER_VEC_RANDOMIZE_VAL_RATE 0.100000  # .
set PROB_MIRROR_IMAGE__MUTATION__PER_VEC_MIRROR_RATE 0.100000         # .
set PROB_MIRROR_IMAGE__MUTATION__COPY_RATE 0.100000                   # .
set PROB_MIRROR_IMAGE__MUTATION__INS_RATE 0.100000                    # .
set PROB_MIRROR_IMAGE__MUTATION__DEL_RATE 0.100000                    # .
set PROB_MIRROR_IMAGE__MUTATION__PER_VEC_SHUFFLE_RATE 0.100000        # .

### PROB_VECTORS_SUMMED_GROUP ###
# Settings specific to the vectors summed problem.

set PROB_VECTORS_SUMMED__MIN_VEC_LEN 0                        # .
set PROB_VECTORS_SUMMED__MAX_VEC_LEN 50                       # .
set PROB_VECTORS_SUMMED__MIN_NUM -1000                        # .
set PROB_VECTORS_SUMMED__MAX_NUM 1000                         # .
set PROB_VECTORS_SUMMED__MUTATION__PER_NUM_SUB_RATE 0.100000  # .
set PROB_VECTORS_SUMMED__MUTATION__COPY_RATE 0.100000         # .
set PROB_VECTORS_SUMMED__MUTATION__INS_RATE 0.100000          # .
set PROB_VECTORS_SUMMED__MUTATION__DEL_RATE 0.100000          # .

### PROB_SUM_OF_SQUARES ###
# Settings specific to the sum of squares problem.

set PROB_SUM_OF_SQUARES__MIN_NUM 1                        # .
set PROB_SUM_OF_SQUARES__MAX_NUM 100                      # .
set PROB_SUM_OF_SQUARES__MUTATION__NUM_MUT_RATE 0.200000  # .

### PROB_VECTOR_AVERAGE_GROUP ###
# Settings specific to the vector average problem

set PROB_VECTOR_AVERAGE__EPSILON 0.000050             # .
set PROB_VECTOR_AVERAGE__MIN_VEC_LEN 1                # .
set PROB_VECTOR_AVERAGE__MAX_VEC_LEN 50               # .
set PROB_VECTOR_AVERAGE__MIN_NUM -1000.000000         # .
set PROB_VECTOR_AVERAGE__MAX_NUM 1000.000000          # .
set PROB_VECTOR_AVERAGE__MUTATION__INS_RATE 0.100000  # .
set PROB_VECTOR_AVERAGE__MUTATION__DEL_RATE 0.100000  # .
set PROB_VECTOR_AVERAGE__MUTATION__SUB_RATE 0.100000  # .

### PROB_SMALLEST_GROUP ###
# Settings specific to the smallest problem

set PROB_SMALLEST__MIN_NUM -100                          # .
set PROB_SMALLEST__MAX_NUM 100                           # .
set PROB_SMALLEST__MUTATION__PER_NUM_SUB_RATE 0.100000   # .
set PROB_SMALLEST__MUTATION__PER_NUM_SWAP_RATE 0.100000  # .

### PROB_MEDIAN_GROUP ###
# Settings specific to the median problem

set PROB_MEDIAN__MIN_NUM -100                          # .
set PROB_MEDIAN__MAX_NUM 100                           # .
set PROB_MEDIAN__MUTATION__PER_NUM_COPY_RATE 0.100000  # .
set PROB_MEDIAN__MUTATION__PER_NUM_SUB_RATE 0.100000   # .
set PROB_MEDIAN__MUTATION__PER_NUM_SWAP_RATE 0.100000  # .

### DATA_COLLECTION_GROUP ###
# Settings specific to data collection.

set DATA_DIRECTORY ./output        # Where should we dump output files?
set SNAPSHOT_INTERVAL 100          # How often should we take population snapshots?
set SUMMARY_STATS_INTERVAL 1000    # How often should we output summary stats?
set SOLUTION_SCREEN_INTERVAL 1000  # How often should we screen entire population for solutions?

