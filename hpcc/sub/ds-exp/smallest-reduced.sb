#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
 
#SBATCH --time=48:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-500
#SBATCH --mem=8G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name sm-red           # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########

##################################
# Setup relevant directories
DATA_DIR=/mnt/scratch/lalejini/lex-gecco2019/data
CONFIG_DIR=/mnt/scratch/lalejini/lex-gecco2019/config
EXAMPLES_DIR=/mnt/scratch/lalejini/lex-gecco2019/examples

##################################
# Setup random seed info
SEL_MODE=REDUCED_TRAINING
PROBLEM_SEED_OFFSET=3000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET))

##################################
# A few utility variables
TRAINING_EXAMPLE_MODE__COEVO=0
TRAINING_EXAMPLE_MODE__STATIC=1
TRAINING_EXAMPLE_MODE__RAND=2
TRAINING_EXAMPLE_MODE__STATIC_GEN=3
TRAINING_EXAMPLE_MODE__STATIC_COEVO=4

SELECTION_MODE__LEX=0
SELECTION_MODE__COHORT_LEX=1
SELECTION_MODE__TOURNAMENT=2
SELECTION_MODE__DRIFT=3
SELECTION_MODE__PROG_ONLY_COHORT_LEXICASE=4
SELECTION_MODE__TEST_DOWNSAMPLING_LEXICASE=5

EVAL_MODE__COHORTS=0
EVAL_MODE__FULL=1
EVAL_MODE__PROG_ONLY_COHORTS=2
EVAL_MODE__TEST_DOWNSAMPLING=3

GENERATIONS__COHORTS_1=300
GENERATIONS__COHORTS_2=600
GENERATIONS__COHORTS_4=1200
GENERATIONS__COHORTS_10=3000
GENERATIONS__COHORTS_20=6000

SNAPSHOT_INT__COHORTS_1=100
SNAPSHOT_INT__COHORTS_2=200
SNAPSHOT_INT__COHORTS_4=400
SNAPSHOT_INT__COHORTS_10=1000
SNAPSHOT_INT__COHORTS_20=2000

SUMMARY_STATS_INT__COHORTS_1=10
SUMMARY_STATS_INT__COHORTS_2=20
SUMMARY_STATS_INT__COHORTS_4=40
SUMMARY_STATS_INT__COHORTS_10=100
SUMMARY_STATS_INT__COHORTS_20=200

##################################
# Setup general configuration
BENCHMARK_DATA_DIR=${EXAMPLES_DIR}
TRAINING_EXAMPLE_MODE=${TRAINING_EXAMPLE_MODE__STATIC_GEN}
PROG_POP_SIZE=1000
TEST_POP_SIZE=100
PROG_LEXICASE_MAX_FUNS=0

##################################
# Problem-specific configuration
PROBLEM=smallest
MAX_PROG_SIZE=64
PROG_EVAL_TIME=64

###### Treatments #######
TREATMENT__COHORTS_1__MIN=1
TREATMENT__COHORTS_1__MAX=100

TREATMENT__COHORTS_2__MIN=101
TREATMENT__COHORTS_2__MAX=200

TREATMENT__COHORTS_4__MIN=201
TREATMENT__COHORTS_4__MAX=300

TREATMENT__COHORTS_10__MIN=301
TREATMENT__COHORTS_10__MAX=400

TREATMENT__COHORTS_20__MIN=401
TREATMENT__COHORTS_20__MAX=500

####################################################################

# SEL_COHORT_LEX__CN_1__CS_512

if [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__COHORTS_1__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__COHORTS_1__MAX} ] ; then
  COHORT_NUM=1
  COHORT_SIZE=100
  PROG_COHORT_SIZE=${COHORT_SIZE}
  TEST_COHORT_SIZE=${COHORT_SIZE}
  NAME=SEL_${SEL_MODE}__CN_${COHORT_NUM}__CS_${COHORT_SIZE}
  EVALUATION_MODE=${EVAL_MODE__FULL}
  PROG_SELECTION_MODE=${SELECTION_MODE__LEX}
  GENERATIONS=${GENERATIONS__COHORTS_1}
  SNAPSHOT_INTERVAL=${SNAPSHOT_INT__COHORTS_1}
  SUMMARY_STATS_INTERVAL=${SUMMARY_STATS_INT__COHORTS_1}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__COHORTS_2__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__COHORTS_2__MAX} ] ; then
  COHORT_NUM=2
  COHORT_SIZE=50
  PROG_COHORT_SIZE=500
  TEST_COHORT_SIZE=50
  TEST_POP_SIZE=${COHORT_SIZE}
  NAME=SEL_${SEL_MODE}__CN_${COHORT_NUM}__CS_${COHORT_SIZE}
  EVALUATION_MODE=${EVAL_MODE__FULL}
  PROG_SELECTION_MODE=${SELECTION_MODE__LEX}
  GENERATIONS=${GENERATIONS__COHORTS_2}
  SNAPSHOT_INTERVAL=${SNAPSHOT_INT__COHORTS_2}
  SUMMARY_STATS_INTERVAL=${SUMMARY_STATS_INT__COHORTS_2}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__COHORTS_4__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__COHORTS_4__MAX} ] ; then
  COHORT_NUM=4
  COHORT_SIZE=25
  PROG_COHORT_SIZE=250
  TEST_COHORT_SIZE=25
  TEST_POP_SIZE=${COHORT_SIZE}
  NAME=SEL_${SEL_MODE}__CN_${COHORT_NUM}__CS_${COHORT_SIZE}
  EVALUATION_MODE=${EVAL_MODE__FULL}
  PROG_SELECTION_MODE=${SELECTION_MODE__LEX}
  GENERATIONS=${GENERATIONS__COHORTS_4}
  SNAPSHOT_INTERVAL=${SNAPSHOT_INT__COHORTS_4}
  SUMMARY_STATS_INTERVAL=${SUMMARY_STATS_INT__COHORTS_4}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__COHORTS_10__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__COHORTS_10__MAX} ] ; then
  COHORT_NUM=10
  COHORT_SIZE=10
  PROG_COHORT_SIZE=100
  TEST_COHORT_SIZE=10
  TEST_POP_SIZE=${COHORT_SIZE}
  NAME=SEL_${SEL_MODE}__CN_${COHORT_NUM}__CS_${COHORT_SIZE}
  EVALUATION_MODE=${EVAL_MODE__FULL}
  PROG_SELECTION_MODE=${SELECTION_MODE__LEX}
  GENERATIONS=${GENERATIONS__COHORTS_10}
  SNAPSHOT_INTERVAL=${SNAPSHOT_INT__COHORTS_10}
  SUMMARY_STATS_INTERVAL=${SUMMARY_STATS_INT__COHORTS_10}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__COHORTS_20__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__COHORTS_20__MAX} ] ; then
  COHORT_NUM=20
  COHORT_SIZE=5
  PROG_COHORT_SIZE=50
  TEST_COHORT_SIZE=5
  TEST_POP_SIZE=${COHORT_SIZE}
  NAME=SEL_${SEL_MODE}__CN_${COHORT_NUM}__CS_${COHORT_SIZE}
  EVALUATION_MODE=${EVAL_MODE__FULL}
  PROG_SELECTION_MODE=${SELECTION_MODE__LEX}
  GENERATIONS=${GENERATIONS__COHORTS_20}
  SNAPSHOT_INTERVAL=${SNAPSHOT_INT__COHORTS_20}
  SUMMARY_STATS_INTERVAL=${SUMMARY_STATS_INT__COHORTS_20}

else
  echo "${SEED} from ${PROBLEM} failed to launch" >> /mnt/scratch/herna383/cohort-lex/ps-failtolaunch.txt

fi

####################################################################


RUN_NAME=PROBLEM_${PROBLEM}__${NAME}__${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

# make a run directory
mkdir -p ${RUN_DIR}

cd ${RUN_DIR}

cp -R ${CONFIG_DIR}/* .

echo "./prog_synth -SEED ${SEED} -BENCHMARK_DATA_DIR ${BENCHMARK_DATA_DIR} -TRAINING_EXAMPLE_MODE ${TRAINING_EXAMPLE_MODE} -PROG_POP_SIZE ${PROG_POP_SIZE} -TEST_POP_SIZE ${TEST_POP_SIZE} -PROG_LEXICASE_MAX_FUNS ${PROG_LEXICASE_MAX_FUNS} -PROBLEM ${PROBLEM} -MAX_PROG_SIZE ${MAX_PROG_SIZE} -PROG_EVAL_TIME ${PROG_EVAL_TIME} -EVALUATION_MODE ${EVALUATION_MODE} -PROG_SELECTION_MODE ${PROG_SELECTION_MODE} -GENERATIONS ${GENERATIONS} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -SUMMARY_STATS_INTERVAL ${SUMMARY_STATS_INTERVAL} > run.log" > ./cmd.txt

./prog_synth -SEED ${SEED} -BENCHMARK_DATA_DIR ${BENCHMARK_DATA_DIR} -TRAINING_EXAMPLE_MODE ${TRAINING_EXAMPLE_MODE} -PROG_POP_SIZE ${PROG_POP_SIZE} -TEST_POP_SIZE ${TEST_POP_SIZE} -PROG_LEXICASE_MAX_FUNS ${PROG_LEXICASE_MAX_FUNS} -PROBLEM ${PROBLEM} -MAX_PROG_SIZE ${MAX_PROG_SIZE} -PROG_EVAL_TIME ${PROG_EVAL_TIME} -EVALUATION_MODE ${EVALUATION_MODE} -PROG_SELECTION_MODE ${PROG_SELECTION_MODE} -GENERATIONS ${GENERATIONS} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -SUMMARY_STATS_INTERVAL ${SUMMARY_STATS_INTERVAL} -PROG_COHORT_SIZE ${PROG_COHORT_SIZE} -TEST_COHORT_SIZE ${TEST_COHORT_SIZE} > run.log